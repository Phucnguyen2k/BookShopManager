<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAA3xJREFUeF7tm71rU1EYxotSBEXwoyii4tBgQtKkaYqLLnYThyJ1EUe1IGJXdXFQ
        0OokBSmCUMVJsIuDLi79A9RJQQQtToJFURSHQlt/T3x7iemJ+ehNaJP3gYdz7jnvx3me3NvbIelyOKpj
        cHCwp1Ao3GIcHxgYuMl4HV5lfpn1C8xPMz+Wz+fTzDdbWuxQbfVQL/VUb51BZ4HX7WzjdtYeS1s9crnc
        QQou1UKaL8JZ+BiOkrvLytQN5aqG1VLNxVDPEHVmK7N61GNAgPMcfJqxYOWqQrGWM2816uZaMqBIBC0w
        3k8mk1ut7ApoTzEWG6xTK9ecActE3PtsNpu00hHUQ3uhnEa4Zg0QEXrbSkfQWii2UboB9RhAQjevkIQJ
        7bXlCO1iAOu9WpdW5t3FRd6rh2n+uSR5rrhRgnYxAOFzy/vSLO1q/KY0EXaEASI936px+SunkwxY0HPx
        TyLsGANEN6B8AboBFh/BDXAD3AA3IBDXMN0AN8ANcAOsdAQ3wA1wA9yAUGyjdAPcADfADbDSEdwAN8AN
        cAPK49yA8gXoBlh8BDfADXAD3IBAXMN0A9yAdWZAJpPZzwFn4Av4DD6BU8ROUPQG4xXGMXie9VGN8BK8
        w/Vz+LWkfk0GKEe5qmG1SmuPEaOe6j3B+hTUmXQ2nXFGZ7bSEYitbgDJPy0+Tmyk9hC1p6G+Sxw0wPb0
        Fdkhljb83YkP1P5VqlUMGbDY39+/zXJiB7WP6FO0ywha055dxo50Or1D2sr1hh6BJQ5z0vLaBmg6FdIa
        NACn9J3dPZa77pHNZveh6WO5TjFogEjCN8ZJeA73RuBwrczn88fJG+KWziQSiU12jrqhXNWAR1Uz1Os/
        HNHZ0XGP+XdpCrGiAXGRA/yG06HXUiUoVjnKDdWMk003YJmI+cGneMg0VoRiiK/4icXNlhlg/JRKpXaa
        1hXQnmLKcprKVhugO+Elz+QB0xxBa9oL5TST+udg1T9PqZd6tuEjRF8UNddaKLaZlHbdAa/KNzqFGPBa
        t16OybtQQDtTmqXdnsDiPwvb2eiJi7y79/IX/SyNZrkOHqIayf3AIc+oFtfBPo1QWk1288E7fQtNJxFT
        848eFYvwu8yb9ivUlgMxJxD2pVRoiIpB/LCltRf6+vp2I/IhIle8ebSG8AeKsfD2BYJTiL2G6Kei5lqz
        7Raiq+sPYBbDzfKiviEAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>105, 17</value>
  </metadata>
</root>